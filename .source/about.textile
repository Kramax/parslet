---
layout: default
title: About
---

h2. Synopsis

{% highlight ruby %} 
class Parser
  include Parslet
  
  root :integer
  rule(:integer) {
    match('[0-9]').repeat
  }
end

Parser.new.parse('1234') # => '1234' 
Parser.new.parse('sdlfkjsldj')  # => raises Parslet::ParseFailed
{% endhighlight %}

Parslet is a Parsing Expression Grammar
("PEG":http://en.wikipedia.org/wiki/Parsing_expression_grammar) Parser. These
are a different kind of grammar that recognize almost the same languages as
your conventional LR parser, except that they are easier to work with, since
they haven't been conceived for generation, but for recognition of languages.
You can read the founding paper of the field by Bryan Ford
"here":http://pdos.csail.mit.edu/~baford/packrat/popl04/peg-popl04.pdf.

Parslet makes developing complex grammars easy. It does so by

* providing the best error reporting possible

* generating a relatively stable intermediary tree and a totally stable
  abstract syntax tree
  
* not generating reams of code for you to debug

Eager to try this out? "Get started":/get-started.html!