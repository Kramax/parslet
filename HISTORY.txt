= 1.1.0 / ???

  ! README had 0.12.0; corrected.
  
  + parslet/rspec.rb contains useful rspec matchers. (R. Konstantin Haase)

= 1.0.0 / 29Dez2010

  - #each_match was removed. There was some duplication of code that even 
    confused me - and we should not have 2 methods of achieving the same
    goal. 
    
  + Full documentation. Fixed sdoc. 

= 0.11.0 / 25Nov2010

  ! Bugfixes to tree handling. Let's hope that was the last such significant
    change to the core.

= 0.10.1 / 22Nov2010

  + Allow match['a-z'], shortcut for match('[a-z]')

  ! Fixed output inconsistencies (behaviour in connection to 'maybe')

= 0.10.0 / 22Nov2010

  + Parslet::Transform now takes a block on initialisation, wherein you can
    define all the rules directly.
    
  + Parslet::Transform now only passes a hash to the block during transform
    when its arity is 1. Otherwise all hash contents as bound as local     
    variables.
    
  + Both inline and other documentation have been improved. 
  
  + You can now use 'subtree(:x)' to bind any subtree to x during tree pattern
    matching. 
    
  + Transform classes can now include rules into class definition. This makes
    Parser and Transformer behave the same. 
  
= 0.9.0 / 28Oct2010
  * More of everything: Examples, documentation, etc...

  * Breaking change: Ruby's binary or ('|') is now used for alternatives, 
    instead of the division sign ('/') - this reduces the amount of 
    parenthesis needed for a grammar overall. 

  * parslet.maybe now yields the result or nil in case of parse failure. This
    is probably better than the array it did before; the jury is still out on
    that. 
    
  * parslet.repeat(min, max) is now valid syntax

= 0.1.0 / not released.

  * Initial version. Classes for parsing, matching in the resulting trees
    and transforming the trees into something more useful.  
    
  * Parses and outputs intermediary trees
    
  * Matching of single elements and sequences